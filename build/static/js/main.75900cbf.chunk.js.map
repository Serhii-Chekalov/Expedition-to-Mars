{"version":3,"sources":["views/discover/Discover.jsx","App.js","reportWebVitals.js","theme.js","index.js"],"names":["defaultValues","rover","camera","sol","RoverTypes","CameraTypes","FHAZ","RHAZ","MAST","CHEMCAM","MAHLI","MARDI","NAVCAM","PANCAM","MINITES","Discover","useState","roversData","setRoverData","formValues","setFormValues","handleSliderChange","debounce","e","target","value","handleInputChange","name","fetchRoverData","fetch","then","response","json","photos","useEffect","Typography","variant","style","fontWeight","onSubmit","event","preventDefault","Object","values","every","Boolean","alert","Grid","container","alignItems","justify","direction","item","FormControl","FormLabel","RadioGroup","onChange","row","map","index","FormControlLabel","control","Radio","size","label","Box","width","Slider","marks","min","max","defaultValue","valueLabelDisplay","keys","filter","key","includes","Button","color","type","length","spacing","elem","xs","sm","md","Card","CardHeader","title","id","subheader","CardContent","maxWidth","src","img_src","replace","alt","srcset","align","App","className","GlobalStyles","styles","ul","margin","padding","listStyle","CssBaseline","AppBar","position","elevation","sx","borderBottom","theme","palette","divider","Toolbar","flexWrap","noWrap","flexGrow","height","objectFit","Container","disableGutters","minHeight","component","pt","pb","path","element","borderTop","py","href","Date","getFullYear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","primary","main","secondary","error","red","A400","ReactDOM","render","StrictMode","basename","ThemeProvider","document","getElementById"],"mappings":"sbAaMA,EAAgB,CACpBC,MAAO,YACPC,OAAQ,UACRC,IAAK,KAGDC,EAAa,CAAC,YAAa,cAAe,UAC1CC,EAAc,CAClBC,KAAM,CAAC,YAAa,cAAe,UACnCC,KAAM,CAAC,YAAa,cAAe,UACnCC,KAAM,CAAC,aACPC,QAAS,CAAC,aACVC,MAAO,CAAC,aACRC,MAAO,CAAC,aACRC,OAAQ,CAAC,YAAa,cAAe,UACrCC,OAAQ,CAAC,cAAe,UACxBC,QAAS,CAAC,cAAe,WAGpB,SAASC,IACd,MAAmCC,mBAAS,MAA5C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAShB,GAA7C,mBAAOmB,EAAP,KAAmBC,EAAnB,KAEMC,EAAqBC,KAAS,SAACC,GACnCH,EAAc,2BACTD,GADQ,IAEXhB,IAAKoB,EAAEC,OAAOC,WAEf,KAEGC,EAAoB,SAACH,GACzB,MAAwBA,EAAEC,OAAlBG,EAAR,EAAQA,KAAMF,EAAd,EAAcA,MACdL,EAAc,2BACTD,GADQ,kBAEVQ,EAAOF,MAING,EAAiB,SAAC,GAA4B,IAA1B3B,EAAyB,EAAzBA,MAAOE,EAAkB,EAAlBA,IAAKD,EAAa,EAAbA,OACpC2B,MAAM,kDAAD,OAC+C5B,EAD/C,uBACmEE,EADnE,mBACiFD,EADjF,6DAGF4B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,gBAAGG,EAAH,EAAGA,OAAH,OAAgBf,EAAae,OAmBvC,OALAC,qBAAU,WACR,IAAQjC,EAAuBkB,EAAvBlB,MAAOE,EAAgBgB,EAAhBhB,IAAKD,EAAWiB,EAAXjB,OACpB0B,EAAe,CAAE3B,QAAOE,MAAKD,aAC5B,IAGD,gCACE,cAACiC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAO,CAAEC,WAAY,QAA9C,sBAGA,uBACA,sBAAMC,SAtBW,SAACC,GAGpB,GAFAA,EAAMC,iBAEFC,OAAOC,OAAOxB,GAAYyB,MAAMC,SAAU,CAC5C,IAAQ5C,EAAuBkB,EAAvBlB,MAAOE,EAAgBgB,EAAhBhB,IAAKD,EAAWiB,EAAXjB,OACpB0B,EAAe,CAAE3B,QAAOE,MAAKD,gBAE7B4C,MAAM,yBAeN,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAASC,QAAQ,SAASC,UAAU,SAA/D,UACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,4BACA,cAACC,EAAA,EAAD,CACE5B,KAAK,QACLF,MAAON,EAAWlB,MAClBuD,SAAU9B,EACV+B,KAAG,EAJL,SAMGrD,EAAWsD,KAAI,SAACzD,EAAO0D,GAAR,OACd,cAACC,EAAA,EAAD,CAEEnC,MAAOxB,EACP4D,QAAS,cAACC,EAAA,EAAD,CAAOC,KAAK,UACrBC,MAAO/D,GAHF0D,aASf,eAACZ,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,cAACE,EAAA,EAAD,gCACA,cAACW,EAAA,EAAD,CAAKC,MAAO,IAAZ,SACE,cAACC,EAAA,EAAD,CACEC,MAAO,CACL,CACE3C,MAAO,EACPuC,MAAO,KAET,CACEvC,MAAO,IACPuC,MAAO,SAGXK,IAAK,EACLC,IAAK,IACLC,aAAcvE,EAAcG,IAC5BqD,SAAUnC,EACV,aAAW,UACXmD,kBAAkB,cAIvBrD,EAAWlB,OACV,cAAC8C,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,6BACA,cAACC,EAAA,EAAD,CACE5B,KAAK,SACLF,MAAON,EAAWjB,OAClBsD,SAAU9B,EACV+B,KAAG,EAJL,SAMGf,OAAO+B,KAAKpE,GACVqE,QAAO,SAACC,GAAD,OACNtE,EAAYsE,GAAKC,SAASzD,EAAWlB,UAEtCyD,KAAI,SAACxD,EAAQyD,GAAT,OACH,cAACC,EAAA,EAAD,CAEEnC,MAAOvB,EACP2D,QAAS,cAACC,EAAA,EAAD,CAAOC,KAAK,UACrBC,MAAO9D,GAHFyD,aAUnB,cAACZ,EAAA,EAAD,CAAMK,MAAI,IACV,uBACA,cAACyB,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUC,KAAK,SAAjD,+BAKJ,uBACA,uBACC9D,EACCA,EAAW+D,OACT,cAACjC,EAAA,EAAD,CACEC,WAAS,EACTiC,QAAS,EACT9B,UAAU,MACVD,QAAQ,aACRD,WAAW,aALb,SAOGhC,EAAWyC,KAAI,SAACwB,GAAD,OACd,cAACnC,EAAA,EAAD,CAAMK,MAAI,EAAC+B,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,MAAON,EAAKO,GACZC,UAAS,mBAAcR,EAAKhF,OAAOyB,QAErC,cAACgE,EAAA,EAAD,UACE,qBACEtD,MAAO,CAAEuD,SAAU,QACnBC,IAAKX,EAAKY,QAAQC,QAAQ,OAAQ,SAClCC,IAAI,GACJC,OAAO,WAXuBf,EAAKO,SAmB/C,cAACtD,EAAA,EAAD,CAAY+D,MAAM,SAAS9D,QAAQ,KAAnC,uBAIA,QC/GK+D,MArEf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,WAAD,WACE,cAACC,EAAA,EAAD,CACEC,OAAQ,CAAEC,GAAI,CAAEC,OAAQ,EAAGC,QAAS,EAAGC,UAAW,WAEpD,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACEC,SAAS,SACT/B,MAAM,UACNgC,UAAW,EACXC,GAAI,CAAEC,aAAc,SAACC,GAAD,0BAAwBA,EAAMC,QAAQC,WAJ5D,SAME,eAACC,EAAA,EAAD,CAASL,GAAI,CAAEM,SAAU,QAAzB,UACE,cAAClF,EAAA,EAAD,CACE+D,MAAM,OACN9D,QAAQ,KACR0C,MAAM,UACNwC,QAAM,EACNP,GAAI,CAAEQ,SAAU,GALlB,gCASA,6BAKJ,qBACEvB,IAAI,OACJ3D,MAAO,CAAEmF,OAAQ,QAAStD,MAAO,OAAQuD,UAAW,SACpD5B,IAAI,8FAEN,cAAC6B,EAAA,EAAD,CACEC,gBAAc,EACdtF,MAAO,CAAEuF,UAAW,uBACpBhC,SAAS,KACTiC,UAAU,OACVd,GAAI,CAAEe,GAAI,EAAGC,GAAI,GALnB,SAOE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAClH,EAAD,UAI7B,cAAC2G,EAAA,EAAD,CACE9B,SAAS,KACTiC,UAAU,SACVd,GAAI,CACFmB,UAAW,SAACjB,GAAD,0BAAwBA,EAAMC,QAAQC,UACjDgB,GAAI,GALR,SAQE,eAAChG,EAAA,EAAD,CAAYC,QAAQ,QAAQ0C,MAAM,iBAAiBoB,MAAM,SAAzD,UACG,kBACD,cAAC,IAAD,CAAQpB,MAAM,UAAUsD,KAAK,mBAA7B,0BAEU,KACT,IAAIC,MAAOC,cACX,eC9DEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3G,MAAK,YAAkD,IAA/C4G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCWCvB,EAdD8B,YAAY,CACxB7B,QAAS,CACP8B,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAMG,IAAIC,SCJhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAS,sBAAxB,SACE,cAACC,EAAA,EAAD,CAAezC,MAAOA,EAAtB,SACE,cAAC,EAAD,UAIN0C,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.75900cbf.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport Radio from \"@mui/material/Radio\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Slider from \"@mui/material/Slider\";\nimport { Card, CardContent, CardHeader, Typography } from \"@mui/material\";\nimport debounce from \"lodash/debounce\";\n\nconst defaultValues = {\n  rover: \"curiosity\",\n  camera: \"CHEMCAM\",\n  sol: 100,\n};\n\nconst RoverTypes = [\"curiosity\", \"opportunity\", \"spirit\"];\nconst CameraTypes = {\n  FHAZ: [\"curiosity\", \"opportunity\", \"spirit\"],\n  RHAZ: [\"curiosity\", \"opportunity\", \"spirit\"],\n  MAST: [\"curiosity\"],\n  CHEMCAM: [\"curiosity\"],\n  MAHLI: [\"curiosity\"],\n  MARDI: [\"curiosity\"],\n  NAVCAM: [\"curiosity\", \"opportunity\", \"spirit\"],\n  PANCAM: [\"opportunity\", \"spirit\"],\n  MINITES: [\"opportunity\", \"spirit\"],\n};\n\nexport function Discover() {\n  const [roversData, setRoverData] = useState(null);\n  const [formValues, setFormValues] = useState(defaultValues);\n\n  const handleSliderChange = debounce((e) => {\n    setFormValues({\n      ...formValues,\n      sol: e.target.value,\n    });\n  }, 500);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n  const fetchRoverData = ({ rover, sol, camera }) => {\n    fetch(\n      `https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/photos?sol=${sol}&camera=${camera}&api_key=vlL5EdR9wnGc5QSO2c7qNDJtytJTxcZB2Jy4YRU5&page=1`\n    )\n      .then((response) => response.json())\n      .then(({ photos }) => setRoverData(photos));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (Object.values(formValues).every(Boolean)) {\n      const { rover, sol, camera } = formValues;\n      fetchRoverData({ rover, sol, camera });\n    } else {\n      alert(\"Form is not finished\");\n    }\n  };\n\n  useEffect(() => {\n    const { rover, sol, camera } = formValues;\n    fetchRoverData({ rover, sol, camera });\n  }, []);\n\n  return (\n    <div>\n      <Typography variant=\"h1\" style={{ fontWeight: \"bold\" }}>\n        Discover\n      </Typography>\n      <br />\n      <form onSubmit={handleSubmit}>\n        <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\">\n          <Grid item>\n            <FormControl>\n              <FormLabel>Type of Rover</FormLabel>\n              <RadioGroup\n                name=\"rover\"\n                value={formValues.rover}\n                onChange={handleInputChange}\n                row\n              >\n                {RoverTypes.map((rover, index) => (\n                  <FormControlLabel\n                    key={index}\n                    value={rover}\n                    control={<Radio size=\"small\" />}\n                    label={rover}\n                  />\n                ))}\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <FormLabel>Sol (day on Mars)</FormLabel>\n            <Box width={300}>\n              <Slider\n                marks={[\n                  {\n                    value: 0,\n                    label: \"0\",\n                  },\n                  {\n                    value: 1000,\n                    label: \"1000\",\n                  },\n                ]}\n                min={0}\n                max={1000}\n                defaultValue={defaultValues.sol}\n                onChange={handleSliderChange}\n                aria-label=\"Default\"\n                valueLabelDisplay=\"auto\"\n              />\n            </Box>\n          </Grid>\n          {formValues.rover && (\n            <Grid item>\n              <FormControl>\n                <FormLabel>Type of Camera</FormLabel>\n                <RadioGroup\n                  name=\"camera\"\n                  value={formValues.camera}\n                  onChange={handleInputChange}\n                  row\n                >\n                  {Object.keys(CameraTypes)\n                    .filter((key) =>\n                      CameraTypes[key].includes(formValues.rover)\n                    )\n                    .map((camera, index) => (\n                      <FormControlLabel\n                        key={index}\n                        value={camera}\n                        control={<Radio size=\"small\" />}\n                        label={camera}\n                      />\n                    ))}\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          )}\n          <Grid item>{/* /// */}</Grid>\n          <br />\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Show results\n          </Button>\n        </Grid>\n      </form>\n      <br />\n      <br />\n      {roversData ? (\n        roversData.length ? (\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            {roversData.map((elem) => (\n              <Grid item xs={12} sm={6} md={3} key={elem.id}>\n                <Card>\n                  <CardHeader\n                    title={elem.id}\n                    subheader={`Camera : ${elem.camera.name}`}\n                  />\n                  <CardContent>\n                    <img\n                      style={{ maxWidth: \"100%\" }}\n                      src={elem.img_src.replace(\"http\", \"https\")}\n                      alt=\"\"\n                      srcset=\"\"\n                    />\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        ) : (\n          <Typography align=\"center\" variant=\"h3\">\n            Not found\n          </Typography>\n        )\n      ) : null}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport UILink from \"@mui/material/Link\";\nimport GlobalStyles from \"@mui/material/GlobalStyles\";\nimport Container from \"@mui/material/Container\";\nimport { Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\n/** Views */\nimport { Discover } from \"./views/discover/Discover\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <React.Fragment>\n        <GlobalStyles\n          styles={{ ul: { margin: 0, padding: 0, listStyle: \"none\" } }}\n        />\n        <CssBaseline />\n        <AppBar\n          position=\"static\"\n          color=\"default\"\n          elevation={0}\n          sx={{ borderBottom: (theme) => `1px solid ${theme.palette.divider}` }}\n        >\n          <Toolbar sx={{ flexWrap: \"wrap\" }}>\n            <Typography\n              align=\"left\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              Expedition to Mars\n            </Typography>\n            <nav></nav>\n          </Toolbar>\n        </AppBar>\n        {/* Hero unit */}\n\n        <img\n          alt=\"Mars\"\n          style={{ height: \"200px\", width: \"100%\", objectFit: \"cover\" }}\n          src=\"https://images.news18.com/ibnlive/uploads/2021/08/1627902340_mars-new-images-1600x900.jpg\"\n        />\n        <Container\n          disableGutters\n          style={{ minHeight: \"calc(100vh - 150px)\" }}\n          maxWidth=\"md\"\n          component=\"main\"\n          sx={{ pt: 2, pb: 6 }}\n        >\n          <Routes>\n            <Route path=\"/\" element={<Discover />} />\n          </Routes>\n        </Container>\n        {/* Footer */}\n        <Container\n          maxWidth=\"md\"\n          component=\"footer\"\n          sx={{\n            borderTop: (theme) => `1px solid ${theme.palette.divider}`,\n            py: 4,\n          }}\n        >\n          <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n            {\"Copyright © \"}\n            <UILink color=\"inherit\" href=\"https://mui.com/\">\n              Your Website\n            </UILink>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n          </Typography>\n        </Container>\n        {/* End footer */}\n      </React.Fragment>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { red } from '@mui/material/colors';\nimport { createTheme } from '@mui/material/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nexport default theme;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/Expedition-to-Mars\">\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}